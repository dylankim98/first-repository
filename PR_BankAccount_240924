# AIFFEL Campus Online Code Peer Review Templete
- 코더 : 김동현 님
- 리뷰어 : 이미현


# PRT(Peer Review Template)
- [O]  **1. 주어진 문제를 해결하는 완성된 코드가 제출되었나요?**
아래와 같이 a,b 2명의 계좌 현황이 보이도록 결과물이 정상적으로 출력되었습니다.
잔액이 부족할 경우 '출금 불가'가 확인되도록 테스트까지 완료하신 점이 인상 깊었습니다.

*결과물
a
1회: 입금 금액:500 잔액:10500
2회: 출금 금액:200 잔액:10300
3회: 입금 금액:500 잔액:10800
4회: 출금 금액:200 잔액:10600
5회: 입금 금액:500 잔액:11100
6회: 출금 금액:200 잔액:10900
7회: 입금 금액:500 잔액:11400
8회: 출금 금액:200 잔액:11200
-----
-----
-----
b
잔고가 부족해요
1회: 입금 금액:100 잔액:10100
2회: 출금 금액:3000 잔액:7100
3회: 입금 금액:100 잔액:7200
4회: 출금 금액:3000 잔액:4200
5회: 입금 금액:100 잔액:4300
6회: 출금 금액:3000 잔액:1300
7회: 입금 금액:100 잔액:1400
8회: 출금실패 금액:3000 잔액:1400

    
- [O]  **2. 전체 코드에서 가장 핵심적이거나 가장 복잡하고 이해하기 어려운 부분에 작성된 
주석 또는 doc string을 보고 해당 코드가 잘 이해되었나요?**

코드를 간단하고 명료하게 작성하기 위해
super()~ 이하로 클래스 코드를 구현하지 않아도 컴퓨터가 동일한 class임을 인식할 수 있도록
@classmethod 데코레이터를 사용하셨고, 사용된 이유와 장점에 대해서도 설명해주셨습니다.

*사용된 코드
class Account:
    bank = "모두은행"
    cnt = 0

    @classmethod
    def get_account_num(cls):
        return cls.cnt

        
- [O]  **3. 에러가 난 부분을 디버깅하여 문제를 해결한 기록을 남겼거나
새로운 시도 또는 추가 실험을 수행해봤나요?**

계좌가 무한으로 생성되지 않도록 아래와 같이 reset 함수를 사용해주신 점이 인상 깊었습니다 :)

    def reset_account(self):
        self.bal = 0
        self.in_cnt = 0
        self.hist = []


- [O]  **4. 회고를 잘 작성했나요?**
주어진 문제를 해결하기 위해 초반부에 to do list 형식으로 작성하고,
그에 따라 코딩을 수행하는 방식을 유지하고 계십니다.
체계적이고 오류를 예상하거나 최소화하는 방식으로 저도 차용/활용해보도록 하겠습니다 :)

*작성된 내용
Account class
(은행이름, 예금주, 계좌번호, 잔액)
(은행이름)은 '모두은행'
계좌번호 (000-00-000,000) 랜덤
계좌 객체(instance)가 몇 번 생성됐는지 <- 객체 개수 저장 변수o

입금 method
최소 1원 이상 입금
5번 입금시 잔고 기준 1% 이자 지급

입금 내역 기록
출금 method
계좌 잔고 이상으로 못함.

출금 내역을 기록
get_account_num() method
Account class로부터 생성된 계좌 개수를 출력하는 용도

history() method
(입금 내역 & 출금 내역)을 출력

        
- [O]  **5. 코드가 간결하고 효율적인가요?**
파이썬 스타일 가이드를 완벽하게 준수하신 것 같습니다 (저는 잘은 모르지만 ㅠㅠ)
약어와 파이썬 기능을 활용해서 코드 중복을 최소화하고 함수화/모듈화를 충분히 이루어내셨습니다!


# 회고(참고 링크 및 코드 개선)
```
어제 어벤저스 보캡 퀘스트에 이어, 오늘도 동현님과 피어 리뷰를 진행했습니다.
이미 거의 완성형이신 데싸 동현님 덕분에 퀘스트를 수행하면서 이해하지 못했던 @classmethod 데코레이터의 개념과 사용 시의 장점에 대해서 추가 학습을 할 수 있었습니다.
간결한 코드 사용의 진수를 보여주신 것 같아 이후에 저의 코드와 비교해보면서 디벨롭 시켜야겠습니다 :)
```
